{
    "$schema": "http://json.schemastore.org/template",
    "author": "Allan Ritchie",
    "classifications": [ "MAUI", "Shiny", "Prism", "ReactiveUI" ],
    "identity": "ShinyApp",
    "name": "Shiny.NET MAUI Application",
    "shortName": "shinymaui",
    "preferNameDirectory": true,
    "groupIdentity": "Shiny.Templates.App",
    "description": "A project for creating a .NET MAUI /w Shiny.NET, Prism, & ReactiveUI",
    "sourceName": "ShinyApp",
    "tags": {
        "language": "C#",
        "type": "project"
    },
    "sources": [
    {
        "source": "./",
        "target": "./",
        "copyOnly": [
            "**/*.svg",
            "**/*.ttf",
            "**/*.txt"
        ],
        "modifiers": [
            {
                "condition": "(push == \"None\")",
                "exclude": "MyPushDelegate.cs"
            },
            {
                "condition": "(httptransfers == false)",
                "exclude": "MyHttpTransferDelegate.cs"
            },
            {
                "condition": "(gps == false)",
                "exclude": "MyGpsDelegate.cs"
            },
            {
                "condition": "(useentitlements == false)",
                "exclude": "Entitlements.plist"
            },
            {
                "condition": "(geofencing == false)",
                "exclude": "MyGeofenceDelegate.cs"
            },
            {
                "condition": "(jobs == false)",
                "exclude": "MyJob.cs"
            },
            {
                "condition": "(blehosting == false)",
                "exclude": "MyBleGattCharacteristic.cs"
            },            
            {
                "condition": "(beacons == false)",
                "exclude": "MyBeaconMonitoringDelegate.cs"
            },
            {
                "condition": "(sqlite == false)",
                "exclude": "MySqliteConnection.cs"
            },
            {
                "condition": "(startup == false)",
                "exclude": "AppStartup.cs"
            },
            {
                "condition": "(settings == false)",
                "exclude": "AppSettings.cs"
            }
        ]
    }],
    "symbols":{
        "applicationId": {
            "type": "parameter",
            "description": "Set the Application Identifier",
            "datatype": "string",
            "replaces": "com.companyname.shinyapp"
        },      
        "sqlite": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add SQLite (SQLite.NET-PCL)",
            "displayName": "Add SQLite (SQLite.NET-PCL)"
        },
        "configuration": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "true",
            "description": "Add AppSettings.json (Shiny.Extensions.Configuration)",
            "displayName": "Add AppSettings.json (Shiny.Extensions.Configuration)"
        },
        "appcenter": {
            "type": "parameter",
            "description": "Your AppCenter Key (optional) - (Shiny.Logging.AppCenter)",
            "defaultValue": "",
            "replaces":"{APPCENTER_KEY}"
        },
        "bluetoothle": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add BluetoothLE Client (Shiny.BluetoothLE)",
            "displayName": "Add BluetoothLE Client (Shiny.BluetoothLE)"
        },
        "blehosting": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add BluetoothLE Hosting (Shiny.BluetoothLE.Hosting)",
            "displayName": "Add BluetoothLE Hosting (Shiny.BluetoothLE.Hosting)"
        },
        "beacons": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Beacons (Shiny.Beacons)",
            "displayName": "Add Beacons (Shiny.Beacons)"
        },
        "jobs": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Background Jobs (Shiny.Jobs)",
            "displayName": "Add Background Jobs (Shiny.Jobs)"
        },
        "gps":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add GPS (Shiny.Locations)",
            "displayName": "Add GPS (Shiny.Locations)"
        },
        "geofencing":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Geofencing (Shiny.Locations)",
            "displayName": "Add Geofencing (Shiny.Locations)"            
        },
        "motionactivity":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Motion Activity (Shiny.Locations)",
            "displayName": "Add Motion Activity (Shiny.Locations)"            
        },
        "httptransfers": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Background HTTP Uploads & Downloads (Shiny.Net.Http)",
            "displayName": "Add Background HTTP Uploads & Downloads (Shiny.Net.Http)"
        },
        "nfc": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add NFC - iOS & Android Only (Shiny.NFC)",
            "displayName": "Add NFC - iOS & Android Only (Shiny.NFC)"
        },
        "notifications": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Local Notifications (Shiny.Notifications)",
            "displayName": "Add Local Notifications (Shiny.Notifications)"
        },
        "startup":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Startup Service (Shiny.Core)",
            "displayName": "Add Startup Service (Shiny.Core)"
        },
        "settings":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Bound Settings Class (Shiny.Core)",
            "displayName": "Add Bound Settings Class (Shiny.Core)"
        },        
        "push": {
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "None",
            "description": "Option to choose the push mechanism",
            "choices": [
                {
                    "choice": "None",
                    "description": "No push library is installed"
                },
                {
                    "choice": "Native",
                    "description": "Native (Shiny.Push)"
                },
                {
                    "choice": "Firebase",
                    "description": "Firebase Messaging - iOS/Android Only (Shiny.Push.FirebaseMessaging)"
                },
                {
                    "choice": "Azure Notification Hubs",
                    "description": "Azure Notifications Hubs (Shiny.Push.AzureNotificationHubs)"
                }
            ]
        },
        "usepushnative":{
            "type": "computed",
            "value": "(push == \"Native\")"
        },
        "usepushfirebase":{
            "type": "computed",
            "value": "(push == \"Firebase\")"
        },
        "usepushanh":{
            "type": "computed",
            "value": "(push == \"Azure Notification Hubs\")"
        },
        "usepush":{
            "type": "computed",
            "value": "(push != \"None\")"
        },
        "useconfig":{
            "type": "computed",
            "value": "(configuration || push != \"None\" || appcenter != \"\")"
        },
        "useappcenter":{
            "type": "computed",
            "value": "(appcenter != \"\")"
        },
        "useentitlements":{
            "type": "computed",
            "value": "(push != \"None\" || nfc)"
        },
        "usemaccatalyst":{
            "type": "computed",
            "value": "(usepushfirebase == false)"
        }
    } 
}